(function(i,l){typeof exports=="object"&&typeof module<"u"?module.exports=l():typeof define=="function"&&define.amd?define(l):(i=typeof globalThis<"u"?globalThis:i||self,i.abstractcss_js=l())})(this,function(){"use strict";var f=Object.defineProperty;var m=(i,l,n)=>l in i?f(i,l,{enumerable:!0,configurable:!0,writable:!0,value:n}):i[l]=n;var g=(i,l,n)=>m(i,typeof l!="symbol"?l+"":l,n);const i=(s,o="-")=>{let e="";return typeof s=="string"&&(e=s.split(o)),e};class l{constructor(o,e){this.element=o,this.className=e}handleBackgroundImage(){const o=(e,t)=>{e.style.backgroundImage=`url("${t[1]}")`,e.style.backgroundPosition="center center",e.style.backgroundRepeat="no-repeat",e.style.backgroundSize="cover"};try{let e=i(this.className,"-image-");if(e.length!==2)throw Error("Out of bounds");o(this.element,e)}catch(e){console.error(`Error while applying background image to: ${this.element}
${e}`)}}handleMargin(){const o=(e,t,r)=>{if(r===2)e.style.margin=`${t[1]}`;else if(r===3)switch(t[1]){case"left":e.style.marginLeft=`${t[2]}`;break;case"right":e.style.marginRight=`${t[2]}`;break;case"top":e.style.marginTop=`${t[2]}`;break;case"bottom":e.style.marginBottom=`${t[2]}`;break;case"x":e.style.marginLeft=`${t[2]}`,e.style.marginRight=`${t[2]}`;break;case"y":e.style.marginTop=`${t[2]}`,e.style.marginBottom=`${t[2]}`;break;default:throw Error("Could not apply margin to element")}};try{let e=i(this.className,"-");if(e.length<2||e.length>3)throw Error("Out of bounds");o(this.element,e,e.length)}catch(e){console.error(`Error while applying margin to: ${this.element}
${e}`)}}handlePadding(){const o=(e,t,r)=>{if(r===2)e.style.padding=`${t[1]}`;else if(r===3)switch(t[1]){case"left":e.style.paddingLeft=`${t[2]}`;break;case"right":e.style.paddingRight=`${t[2]}`;break;case"top":e.style.paddingTop=`${t[2]}`;break;case"bottom":e.style.paddingBottom=`${t[2]}`;break;case"x":e.style.paddingLeft=`${t[2]}`,e.style.paddingRight=`${t[2]}`;break;case"y":e.style.paddingTop=`${t[2]}`,e.style.paddingBottom=`${t[2]}`;break;default:throw Error("Could not apply padding to element")}};try{let e=i(this.className,"-");if(e.length<2||e.length>3)throw Error("Out of bounds");o(this.element,e,e.length)}catch(e){console.error(`Error while applying padding to: ${this.element}
${e}`)}}handleBorderRadius(){const o=(e,t,r)=>{if(r===3)e.style.borderRadius=`${t[2]}`;else if(r===4)switch(t[2]){case"top":e.style.borderTopLeftRadius=`${t[3]}`,e.style.borderTopRightRadius=`${t[3]}`;break;case"bottom":e.style.borderBottomLeftRadius=`${t[3]}`,e.style.borderBottomRightRadius=`${t[3]}`;break;case"left":e.style.borderTopLeftRadius=`${t[3]}`,e.style.borderBottomLeftRadius=`${t[3]}`;break;case"right":e.style.borderTopRightRadius=`${t[3]}`,e.style.borderBottomRightRadius=`${t[3]}`;break;default:throw Error("Could not apply border radius")}else if(r===5)switch(`${t[2]}-${t[3]}`){case"top-left":e.style.borderTopLeftRadius=`${t[4]}`;break;case"bottom-left":e.style.borderBottomLeftRadius=`${t[4]}`;break;case"top-right":e.style.borderTopRightRadius=`${t[4]}`;break;case"bottom-right":e.style.borderBottomRightRadius=`${t[4]}`;break;default:throw Error("Could not apply border radius")}};try{let e=i(this.className,"-");if(e.length<3||e.length>5)throw Error("Out of bounds");o(this.element,e,e.length)}catch(e){console.error(`Error while applying border radius to: ${this.element}
${e}`)}}handleBorderWidth(){const o=(e,t)=>{e.style.borderWidth=`${t[2]}`};try{let e=i(this.className,"-");if(e.length!==3)throw Error("Out of bounds");o(this.element,e)}catch(e){console.error(`Error while applying border width to: ${this.element}
${e}`)}}handleWidth(){const o=(e,t)=>{(t[1]!=="min"||t[1]!=="med"||t[1]!=="max")&&(e.style.width=`${t[1]}`)};try{let e=i(this.className,"-");if(e.length<2||e.length>3)throw Error("Out of bounds");o(this.element,e)}catch(e){console.error(`Error while applying width to: ${this.element}
${e}`)}}handleHeight(){const o=(e,t)=>{(t[1]!=="min"||t[1]!=="med"||t[1]!=="max")&&(e.style.height=`${t[1]}`)};try{let e=i(this.className,"-");if(e.length!==2)throw Error("Out of bounds");o(this.element,e)}catch(e){console.error(`Error while applying height to: ${this.element}
${e}`)}}handleGrid(){const o=(e,t)=>{e.style.display="grid",e.style.gridTemplateColumns=`repeat(${t[1]}, 1fr)`};try{if(!this.className.includes("grid-gap")&&!this.className.includes("grid-auto")){let e=i(this.className,"-");if(e.length<2||e.length>3)throw Error("Out of bounds");o(this.element,e)}}catch(e){console.error(`Error while applying grid gap to: ${this.element}
${e}`)}}handleGridGap(){const o=(e,t,r)=>{if(r===3)e.style.gridGap=`${t[2]}`;else if(r===4)switch(t[2]){case"row":e.style.gridRowGap=`${t[3]}`;break;case"col":e.style.gridColumnGap=`${t[3]}`;break;case"tab":window.screen.width<=1080&&(e.style.gridGap=`${t[3]}`);break;case"mob":window.screen.width<=600&&(e.style.gridGap=`${t[3]}`);break;default:throw Error("Could not apply padding to element")}};try{let e=i(this.className,"-");if(e.length<3||e.length>4)throw Error("Out of bounds");o(this.element,e,e.length)}catch(e){console.error(`Error while applying grid gap to: ${this.element}
${e}`)}}handleGridColumn(){const o=(e,t)=>{t[1]=="start"&&(e.style.gridColumnStart=`${t[2]}`),t[1]=="end"&&(e.style.gridColumnEnd=`${t[2]}`),Number(t[1])&&Number(t[2])&&(e.style.gridColumn=`${t[1]}/${t[2]}`)};try{let e=i(this.className,"-");if(e.length!==3)throw Error("Out of bounds");o(this.element,e)}catch(e){console.error(`Error while applying grid column to: ${this.element}
${e}`)}}handleGridRow(){const o=(e,t)=>{t[1]=="start"&&(e.style.gridRowStart=`${t[2]}`),t[1]=="end"&&(e.style.gridRowEnd=`${t[2]}`),Number(t[1])&&Number(t[2])&&(e.style.gridRow=`${t[1]}/${t[2]}`)};try{let e=i(this.className,"-");if(e.length!==3)throw Error("Out of bounds");o(this.element,e)}catch(e){console.error(`Error while applying grid row to: ${this.element}
${e}`)}}}class n{constructor(o,e){this.element=o,this.className=e}static createStyleTag(){let o=document.querySelector("style");return o||(o=document.createElement("style"),document.head.appendChild(o)),o}static applyHover(o,e){let t=this.createStyleTag();e[1]=="scale"&&(t.textContent+=`
            ._hover-scale-${e[2].replace(".","\\.")}:hover {
                transform: scale(${e[2]}) !important;
            }
        `),e[1]=="bg"&&e[2]=="color"&&(t.textContent+=`
            ._hover-bg-color-\\${e[3]}:hover {
                background-color: ${e[3]} !important;
            }
            `),e[1]=="color"&&(t.textContent+=`
            ._hover-color-\\${e[2]}:hover {
                color: ${e[2]} !important;
            }
            `)}static applyActive(o,e){let t=this.createStyleTag();e[1]=="scale"&&(t.textContent+=`
              ._active-scale-${e[2].replace(".","\\.")}:active {
                  transform: scale(${e[2]}) !important;
              }
          `),e[1]=="bg"&&e[2]=="color"&&(t.textContent+=`
              ._active-bg-color-\\${e[3]}:active {
                  background-color: ${e[3]} !important;
              }
              `),e[1]=="color"&&(t.textContent+=`
              ._active-color-\\${e[2]}:active {
                  color: ${e[2]} !important;
              }
              `)}static applyFocus(o,e){let t=this.createStyleTag();e[1]=="scale"&&(t.textContent+=`
            ._focus-scale-${e[2].replace(".","\\.")}:focus {
                transform: scale(${e[2]}) !important;
            }
        `),e[1]=="bg"&&e[2]=="color"&&(t.textContent+=`
            ._focus-bg-color-\\${e[3]}:focus {
                background-color: ${e[3]} !important;
            }
            `),e[1]=="color"&&(t.textContent+=`
            ._focus-color-\\${e[2]}:focus {
                color: ${e[2]} !important;
            }
            `)}handleInteraction(){try{this.element.style.transition="all 0.3s ease";let o=i(this.className);if(o.length<2||o.length>4)throw Error("Out of bounds");this.className.startsWith("_hover")&&n.applyHover(this.element,o),this.className.startsWith("_active")&&n.applyActive(this.element,o),this.className.startsWith("_focus")&&n.applyFocus(this.element,o)}catch(o){console.error(`Error while applying interaction to: ${this.element}
${o}`)}}}class p{constructor(o,e){this.element=o,this.className=e}handleTextColor(){try{let o=i(this.className,"-");if(o.length!==2)throw Error("Out of bounds");this.element.style.color=`${o[1]}`}catch(o){console.error(`Error while applying text color to: ${this.element}
${o}`)}}handleBackgroundColor(){try{let o=i(this.className,"-");if(o.length!==3)throw Error("Out of bounds");this.element.style.backgroundColor=`${o[2]}`}catch(o){console.error(`Error while applying background color to: ${this.element}
${o}`)}}handleBorderColor(){try{let o=i(this.className,"-");if(o.length!==3)throw Error("Out of bounds");this.element.style.borderColor=`${o[2]}`}catch(o){console.error(`Error while applying border color to: ${this.element}
${o}`)}}}class d{constructor(o,e){g(this,"$IS_TABLET",window.innerWidth>600&&window.innerWidth<=1080);g(this,"$IS_MOBILE",window.innerWidth<=600);this.element=o,this.className=e}static applyMobile(o,e){let t=e.replace("mob:",""),r=o.className.split(" ");r.forEach(a=>{if(a.includes("mob:")){let h=r.indexOf(a);r[h]=t}}),o.className=r.join(" "),c()}static applyTablet(o,e){let t=e.replace("tab:",""),r=o.className.split(" ");r.forEach(a=>{if(a.startsWith("tab:")){let h=r.indexOf(a);r[h]=t}}),o.className=r.join(" "),c()}handleResponsiveness(){try{this.className.startsWith("mob:")&&this.$IS_MOBILE&&d.applyMobile(this.element,this.className),this.className.startsWith("tab:")&&this.$IS_TABLET&&d.applyTablet(this.element,this.className)}catch(o){console.error(`Error while applying responsive behavior to element: ${this.element}
${o}`)}}}class y{constructor(o,e){this.element=o,this.className=e}handleFontSize(){try{let o=i(this.className,"-");if(o.length!==3)throw Error("Out of bounds");o[3]!=="min"&&o[3]!=="med"&&o[3]!=="max"&&(this.element.style.fontSize=`${o[2]}`)}catch(o){console.error(`Error while applying font size to: ${this.element}
${o}`)}}handleLineHeight(){try{let o=i(this.className,"-");if(o.length!==3)throw Error("Out of bounds");this.element.style.lineHeight=`${o[2]}`}catch(o){console.error(`Error while applying line height to: ${this.element}
${o}`)}}}const u=()=>{const s=document.querySelectorAll("*");return Array.from(s)},c=()=>{var e;const s=u(),o={"mob:":(t,r)=>new d(t,r).handleResponsiveness(),"tab:":(t,r)=>new d(t,r).handleResponsiveness(),padding:(t,r)=>new l(t,r).handlePadding(),margin:(t,r)=>new l(t,r).handleMargin(),grid:(t,r)=>new l(t,r).handleGrid(),"grid-gap":(t,r)=>new l(t,r).handleGridGap(),column:(t,r)=>new l(t,r).handleGridColumn(),row:(t,r)=>new l(t,r).handleGridRow(),color:(t,r)=>new p(t,r).handleTextColor(),"bg-color":(t,r)=>new p(t,r).handleBackgroundColor(),"border-color":(t,r)=>new p(t,r).handleBorderColor(),width:(t,r)=>new l(t,r).handleWidth(),height:(t,r)=>new l(t,r).handleHeight(),"font-size":(t,r)=>new y(t,r).handleFontSize(),"line-height":(t,r)=>new y(t,r).handleLineHeight(),"border-width":(t,r)=>new l(t,r).handleBorderWidth(),"border-radius":(t,r)=>new l(t,r).handleBorderRadius(),"bg-image":(t,r)=>new l(t,r).handleBackgroundImage(),_:(t,r)=>new n(t,r).handleInteraction()};for(const t of s){const r=((e=t.className)==null?void 0:e.split(" "))||[];for(const a of r)for(const h in o)if(a.startsWith(h)){o[h](t,a);break}}};return c(),c});
